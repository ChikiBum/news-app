const AD_SIZES = [
	[300, 250],
	[250, 250],
];

let adIdCounter = 1;
function generateUniqueAdId(): string {
	return `my-uniq-id-${adIdCounter++}`;
}

const processedElements = new Set<Element>();

function debugLog(...args: any[]) {
	if (localStorage.getItem("adsDebug") === "true") {
		console.log(...args);
	}
}

function debugWarn(...args: any[]) {
	if (localStorage.getItem("adsDebug") === "true") {
		console.warn(...args);
	}
}

function debugError(...args: any[]) {
	if (localStorage.getItem("adsDebug") === "true") {
		console.error(...args);
	}
}

console.log("adsModule –ø–æ–¥–∫–ª—é—á–µ–Ω–æ —á–µ—Ä–µ–∑ virtual:plugins!");
if (localStorage.getItem("adsDebug") === "true") {
	console.log("üêõ DEBUG MODE: –í–∫–ª—é—á–µ–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã");
	console.log("üí° –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å: localStorage.removeItem('adsDebug')");
}

function appendScriptWithSrc(src: any) {
	debugLog("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å–∫—Ä–∏–ø—Ç–∞:", src);
	return new Promise((resolve, reject) => {
		const script = document.createElement("script");
		script.async = true;
		script.src = src;
		script.onload = () => {
			debugLog("‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:", src);
			resolve(null);
		};
		script.onerror = (error) => {
			debugError("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞:", src);
			debugError("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:", error);
			debugError("Script element:", script);
			reject(new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–ø—Ç: ${src}`));
		};
		document.head.appendChild(script);
		debugLog("üì§ –°–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ DOM:", src);
	});
}

function appendScriptWithCode(code: string) {
	const script = document.createElement("script");
	script.innerHTML = code;
	document.head.appendChild(script);
	return Promise.resolve();
}

function loadAdtelligentBidAdapter() {
	debugLog("üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º AdtelligentBidAdapter...");
	return appendScriptWithSrc(
		"http://localhost:4444/bundle?modules=adtelligentBidAdapter",
	);
}
function loadGoogleScript() {
	debugLog("üîç –ó–∞–≥—Ä—É–∂–∞–µ–º Google Tag Services...");
	return appendScriptWithSrc("https://www.googletagservices.com/tag/js/gpt.js");
}

function loadPbjsScript() {
	debugLog("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º Prebid.js —Å–∫—Ä–∏–ø—Ç...");
	const adsContainers = document.querySelectorAll("#ads-wrapper");
	debugLog("üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã:", adsContainers.length);

	const adUnitsData = Array.from(adsContainers).map((container) => {
		const uniqueId = generateUniqueAdId();
		container.setAttribute("data-ad-id", uniqueId);
		debugLog("üÜî –°–æ–∑–¥–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID:", uniqueId, "–¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞");
		return {
			code: uniqueId,
			mediaTypes: { banner: { sizes: AD_SIZES } },
			bids: [{ bidder: "adtelligent", params: { aid: 350975 } }],
		};
	});

	debugLog("üìã AdUnits –¥–∞–Ω–Ω—ã–µ:", adUnitsData);

	const debugLogCode =
		localStorage.getItem("adsDebug") === "true"
			? `
      console.log('üìä Prebid.js: —Å–æ–∑–¥–∞–Ω–æ adUnits:', adUnits.length);
      console.log('üìä Prebid.js: –≤—Å–µ adUnits:', window.allAdUnits);
    `
			: "";

	return appendScriptWithCode(`
    var pbjs = pbjs || {};
    pbjs.que = pbjs.que || [];
    const adUnits = ${JSON.stringify(adUnitsData)};

    if (!window.allAdUnits) window.allAdUnits = [];
    window.allAdUnits.push(...adUnits);
    ${debugLogCode}
  `);
}
function loadGoogletag() {
	debugLog("üåê –ó–∞–≥—Ä—É–∂–∞–µ–º Google Tag —Å–∫—Ä–∏–ø—Ç...");

	const debugLogCode =
		localStorage.getItem("adsDebug") === "true"
			? `console.log('üåê Google Tag: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');`
			: "";

	return appendScriptWithCode(`
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    googletag.cmd.push(function () {
      googletag.pubads().disableInitialLoad();
    });
    pbjs.que.push(function () {
      pbjs.setConfig({ enableTIDs: true });
      pbjs.addAdUnits(window.allAdUnits || []);
      pbjs.requestBids({ bidsBackHandler: sendAdServerRequest });
    });
    function sendAdServerRequest() {
      googletag.cmd.push(function () {
        pbjs.que.push(function () {
          window.allAdUnits.forEach(function(adUnit) {
            pbjs.setTargetingForGPTAsync(adUnit.code);
          });
          googletag.pubads().refresh();
        });
      });
    }
    ${debugLogCode}
  `);
}
function loadDefineSlot() {
	debugLog("üé∞ –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ—Ç—ã –¥–ª—è Google Ad Manager...");
	const adsContainers = document.querySelectorAll("#ads-wrapper[data-ad-id]");
	debugLog("üé∞ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å data-ad-id:", adsContainers.length);

	const isDebugMode = localStorage.getItem("adsDebug") === "true";
	const defineSlotCode = Array.from(adsContainers)
		.map((container) => {
			const adId = container.getAttribute("data-ad-id");
			if (!adId) return "";
			debugLog("üé∞ –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç –¥–ª—è ID:", adId);

			return `
        ${isDebugMode ? `console.log('üé∞ Google Tag: –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–æ—Ç –¥–ª—è ${adId}');` : ""}
        const slot_${adId.replace(/-/g, "_")} = googletag
          .defineSlot('/19968336/header-bid-tag-0', ${JSON.stringify(AD_SIZES)}, '${adId}')
          .addService(googletag.pubads());
        ${isDebugMode ? `console.log('‚úÖ Google Tag: —Å–ª–æ—Ç –¥–ª—è ${adId} —Å–æ–∑–¥–∞–Ω');` : ""}
      `;
		})
		.filter((code) => code !== "")
		.join("");

	const debugLogCode = isDebugMode
		? `console.log('üé∞ Google Tag: –≤—Å–µ —Å–ª–æ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∏ —Å–µ—Ä–≤–∏—Å—ã –≤–∫–ª—é—á–µ–Ω—ã');`
		: "";

	return appendScriptWithCode(`
    googletag.cmd.push(function () {
      ${defineSlotCode}
      googletag.pubads().enableSingleRequest();
      googletag.enableServices();
      ${debugLogCode}
    });
  `);
}
function loadDisplaySlot() {
	debugLog("üì∫ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Å–ª–æ—Ç—ã...");
	const adsContainers = document.querySelectorAll("#ads-wrapper[data-ad-id]");
	debugLog("üì∫ –ù–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å data-ad-id:", adsContainers.length);

	const isDebugMode = localStorage.getItem("adsDebug") === "true";
	let processedCount = 0;

	adsContainers.forEach((container) => {
		const containerElement = container as Element;
		const adId = containerElement.getAttribute("data-ad-id");

		if (!adId || processedElements.has(containerElement)) {
			debugLog("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ –Ω–µ—Ç ID)");
			return;
		}

		debugLog("üì∫ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å adId:", adId);
		processedElements.add(containerElement);

		containerElement.innerHTML = "";

		const div = document.createElement("div");
		div.id = adId;
		div.style.cssText =
			"width: 300px; height: 250px; border: 1px solid #ddd; background-color: #f5f5f5; margin: 0 auto;";

		const script = document.createElement("script");
		script.innerHTML = `
      googletag.cmd.push(function() { 
        ${isDebugMode ? `console.log('üì∫ Google Tag: –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ª–æ—Ç ${adId}');` : ""}
        googletag.display('${adId}'); 
        ${isDebugMode ? `console.log('‚úÖ Google Tag: –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è ${adId}');` : ""}
      });
    `;

		div.appendChild(script);
		containerElement.appendChild(div);
		processedCount++;

		debugLog("‚úÖ –°–ª–æ—Ç —Å–æ–∑–¥–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ DOM –¥–ª—è adId:", adId);
	});

	debugLog(
		`üì∫ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${processedCount} –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ ${adsContainers.length} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö`,
	);
	return Promise.resolve();
}

function runAllAdsSequence() {
	debugLog(
		"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–ª–∞–º—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...",
	);
	setTimeout(() => {
		debugLog("‚è∞ 2 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–æ—à–ª–æ, –Ω–∞—á–∏–Ω–∞–µ–º —Ü–µ–ø–æ—á–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∫–ª–∞–º—ã");
		loadAdtelligentBidAdapter()
			.catch((err) => {
				debugWarn(
					"‚ö†Ô∏è AdtelligentBidAdapter –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ:",
					err.message,
				);
				return Promise.resolve();
			})
			.then(() => {
				debugLog("‚úÖ –¶–µ–ø–æ—á–∫–∞: AdtelligentBidAdapter –∑–∞–≤–µ—Ä—à–µ–Ω (–∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω)");
				return loadGoogleScript();
			})
			.then(() => {
				debugLog("‚úÖ –¶–µ–ø–æ—á–∫–∞: GoogleScript –∑–∞–≤–µ—Ä—à–µ–Ω");
				return loadPbjsScript();
			})
			.then(() => {
				debugLog("‚úÖ –¶–µ–ø–æ—á–∫–∞: PbjsScript –∑–∞–≤–µ—Ä—à–µ–Ω");
				return loadGoogletag();
			})
			.then(() => {
				debugLog("‚úÖ –¶–µ–ø–æ—á–∫–∞: Googletag –∑–∞–≤–µ—Ä—à–µ–Ω");
				return loadDefineSlot();
			})
			.then(() => {
				debugLog("‚úÖ –¶–µ–ø–æ—á–∫–∞: DefineSlot –∑–∞–≤–µ—Ä—à–µ–Ω");
				return loadDisplaySlot();
			})
			.then(() => {
				debugLog("üéâ –í–°–Ø –†–ï–ö–õ–ê–ú–ê –ó–ê–ì–†–£–ñ–ï–ù–ê –£–°–ü–ï–®–ù–û!");
			})
			.catch((err) => {
				debugError("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤:");
				debugError("–¢–∏–ø –æ—à–∏–±–∫–∏:", err.constructor.name);
				debugError("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:", err.message);
				debugError("–ü–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏:", err);

				if (err.message && err.message.includes("googletagservices.com")) {
					debugError("üîß –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Google Tag Services");
					debugError(
						"üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–ª–∞–º—ã, –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é",
					);
				}
			});
	}, 2000);
}

runAllAdsSequence();
